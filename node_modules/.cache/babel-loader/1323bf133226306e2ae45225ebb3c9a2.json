{"remainingRequest":"/Users/zhangoking/study/vue-cli/hello-word/node_modules/babel-loader/lib/index.js!/Users/zhangoking/study/vue-cli/hello-word/src/utils/filters/currency.js","dependencies":[{"path":"/Users/zhangoking/study/vue-cli/hello-word/src/utils/filters/currency.js","mtime":1548647407023},{"path":"/Users/zhangoking/study/vue-cli/hello-word/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangoking/study/vue-cli/hello-word/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport _parseFloat from \"/Users/zhangoking/study/vue-cli/hello-word/node_modules/@babel/runtime-corejs2/core-js/parse-float\";\n\n/**\n * 12345 => $12,345.00\n *\n * @param  {[type]} value    [description]\n * @param  {[type]} currency [description]\n * @return {[type]}          [description]\n */\nexport var currency = function currency(value, _currency) {\n  value = _parseFloat(value);\n\n  if (!isFinite(value) || !value && value !== 0) {\n    return '';\n  }\n\n  _currency = _currency !== null ? _currency : '$';\n  var stringified = Math.abs(value).toFixed(2);\n\n  var _int = stringified.slice(0, -3);\n\n  var i = _int.length % 3;\n  var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\n  var _float = stringified.slice(-3);\n\n  var sign = value < 0 ? '-' : '';\n  return _currency + sign + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n};",{"version":3,"sources":["/Users/zhangoking/study/vue-cli/hello-word/src/utils/filters/currency.js"],"names":["currency","value","isFinite","stringified","Math","abs","toFixed","_int","slice","i","length","head","_float","sign","replace","digitsRE"],"mappings":";;;AAAA;;;;;;;AAOA,OAAO,IAAMA,QAAQ,GAAG,kBAACC,KAAD,EAAQD,SAAR,EAAqB;AAEzCC,EAAAA,KAAK,GAAG,YAAWA,KAAX,CAAR;;AAEA,MAAI,CAACC,QAAQ,CAACD,KAAD,CAAT,IAAqB,CAACA,KAAD,IAAUA,KAAK,KAAK,CAA7C,EAAiD;AAE7C,WAAO,EAAP;AACH;;AAEDD,EAAAA,SAAQ,GAAGA,SAAQ,KAAK,IAAb,GAAoBA,SAApB,GAA+B,GAA1C;AACA,MAAIG,WAAW,GAAGC,IAAI,CAACC,GAAL,CAASJ,KAAT,EAAgBK,OAAhB,CAAwB,CAAxB,CAAlB;;AACA,MAAIC,IAAI,GAAGJ,WAAW,CAACK,KAAZ,CAAkB,CAAlB,EAAqB,CAAC,CAAtB,CAAX;;AACA,MAAIC,CAAC,GAAGF,IAAI,CAACG,MAAL,GAAc,CAAtB;AACA,MAAIC,IAAI,GAAGF,CAAC,GAAG,CAAJ,GACNF,IAAI,CAACC,KAAL,CAAW,CAAX,EAAcC,CAAd,KAAoBF,IAAI,CAACG,MAAL,GAAc,CAAd,GAAkB,GAAlB,GAAwB,EAA5C,CADM,GAEP,EAFJ;;AAGA,MAAIE,MAAM,GAAGT,WAAW,CAACK,KAAZ,CAAkB,CAAC,CAAnB,CAAb;;AACA,MAAIK,IAAI,GAAGZ,KAAK,GAAG,CAAR,GAAY,GAAZ,GAAkB,EAA7B;AAEA,SAAOD,SAAQ,GAAGa,IAAX,GAAkBF,IAAlB,GACHJ,IAAI,CAACC,KAAL,CAAWC,CAAX,EAAcK,OAAd,CAAsBC,QAAtB,EAAgC,KAAhC,CADG,GAEHH,MAFJ;AAGH,CAtBM","sourcesContent":["/**\n * 12345 => $12,345.00\n *\n * @param  {[type]} value    [description]\n * @param  {[type]} currency [description]\n * @return {[type]}          [description]\n */\nexport const currency = (value, currency) => {\n\n    value = parseFloat(value)\n\n    if (!isFinite(value) || (!value && value !== 0)) {\n\n        return ''\n    }\n\n    currency = currency !== null ? currency : '$'\n    let stringified = Math.abs(value).toFixed(2)\n    let _int = stringified.slice(0, -3)\n    let i = _int.length % 3\n    let head = i > 0 ?\n        (_int.slice(0, i) + (_int.length > 3 ? ',' : '')) :\n        ''\n    let _float = stringified.slice(-3)\n    let sign = value < 0 ? '-' : ''\n\n    return currency + sign + head +\n        _int.slice(i).replace(digitsRE, '$1,') +\n        _float\n}"]}]}