{"remainingRequest":"/Users/zhangoking/study/vue-cli/hello-word/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangoking/study/vue-cli/hello-word/src/utils/components/input/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhangoking/study/vue-cli/hello-word/src/utils/components/input/index.vue","mtime":1548054049584},{"path":"/Users/zhangoking/study/vue-cli/hello-word/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhangoking/study/vue-cli/hello-word/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangoking/study/vue-cli/hello-word/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  props: {\n    placeholder: { // 输入框占位文本\n      type: String,\n      default: ''\n    },\n    suffixIcon: {\n      default: '',\n      type: String\n    },\n    prefixIcon: {\n      default: '',\n      type: String\n    },\n    type: { // 类型  text/textarea\n      default: 'text',\n      type: String\n    },\n    rows: { // 输入框行数，只对 type=\"textarea\" 有效\n      default: 1,\n      type: Number\n    },\n    value: { // input 值\n      default: ''\n    },\n    size: { // large small mini type為'text'時可用\n      type: String\n    },\n    maxlength: { // large small mini type為'text'時可用\n      type: Number\n    },\n    autosize: { // 自适应内容高度，只对 type=\"textarea\" 有效，可传入对象，如，{ minRows: 2, maxRows: 6 }\n      default: false,\n      type: [ Boolean, Object ]\n    },\n    readonly: { // 原生属性，是否只读\n      default: false,\n      type: Boolean\n    },\n    autofocus: { // 自动获取焦点\n      default: false,\n      type: Boolean\n    },\n    resize: { // 控制是否能被缩放 none, both, horizontal, vertical\n      type: String\n    },\n    disabled: {\n      default: false,\n      type: Boolean\n    },\n    name: null // 原生属性\n  },\n  data() {\n    return {\n      model: this.value\n    }\n  },\n  watch: {\n    model(val) {\n      this.$emit('input', val)\n    },\n    value(val) {\n      this.model = val\n    }\n  },\n  methods: {\n\n    // 在 Input 失去焦点时触发\n    blur(ev) {\n      this.$emit('blur', ev)\n    },\n\n    // 在 Input 获得焦点时触发\n    focus(ev) {\n      this.$emit('focus', ev)\n    },\n\n    // 在 Input 获得焦点时触发\n    change(val) {\n      this.$emit('change', val)\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/utils/components/input","sourcesContent":["<template>\n<el-input\n  v-model=\"model\"\n  :placeholder=\"placeholder\"\n  :suffix-icon=\"suffixIcon\"\n  :prefix-icon=\"prefixIcon\"\n  :type=\"type\"\n  :rows=\"rows\"\n  :value=\"value\"\n  :size=\"size\"\n  :maxlength=\"maxlength\"\n  :autosize=\"autosize\"\n  :readonly=\"readonly\"\n  :autofocus=\"autofocus\"\n  :resize=\"resize\"\n  :name:=\"name\"\n  :disabled=\"disabled\"\n  @blur=\"blur\"\n  @focus=\"focus\"\n  @change=\"change\">\n  <slot slot='suffix' name='suffix'></slot>\n  <slot slot='prefix' name='prefix'></slot>\n</el-input>\n</template>\n\n<script>\nexport default {\n  props: {\n    placeholder: { // 输入框占位文本\n      type: String,\n      default: ''\n    },\n    suffixIcon: {\n      default: '',\n      type: String\n    },\n    prefixIcon: {\n      default: '',\n      type: String\n    },\n    type: { // 类型  text/textarea\n      default: 'text',\n      type: String\n    },\n    rows: { // 输入框行数，只对 type=\"textarea\" 有效\n      default: 1,\n      type: Number\n    },\n    value: { // input 值\n      default: ''\n    },\n    size: { // large small mini type為'text'時可用\n      type: String\n    },\n    maxlength: { // large small mini type為'text'時可用\n      type: Number\n    },\n    autosize: { // 自适应内容高度，只对 type=\"textarea\" 有效，可传入对象，如，{ minRows: 2, maxRows: 6 }\n      default: false,\n      type: [ Boolean, Object ]\n    },\n    readonly: { // 原生属性，是否只读\n      default: false,\n      type: Boolean\n    },\n    autofocus: { // 自动获取焦点\n      default: false,\n      type: Boolean\n    },\n    resize: { // 控制是否能被缩放 none, both, horizontal, vertical\n      type: String\n    },\n    disabled: {\n      default: false,\n      type: Boolean\n    },\n    name: null // 原生属性\n  },\n  data() {\n    return {\n      model: this.value\n    }\n  },\n  watch: {\n    model(val) {\n      this.$emit('input', val)\n    },\n    value(val) {\n      this.model = val\n    }\n  },\n  methods: {\n\n    // 在 Input 失去焦点时触发\n    blur(ev) {\n      this.$emit('blur', ev)\n    },\n\n    // 在 Input 获得焦点时触发\n    focus(ev) {\n      this.$emit('focus', ev)\n    },\n\n    // 在 Input 获得焦点时触发\n    change(val) {\n      this.$emit('change', val)\n    }\n  }\n}\n</script>\n<style lang='less'>\n  .el-input__prefix, .el-input__suffix {\n    width: 25px;\n  }\n  .el-input__prefix i.icon, .el-input__suffix i.icon {\n    width: 25px;\n    text-align: center;\n    -webkit-transition: all .3s;\n    transition: all .3s;\n    position: absolute;\n    top: 50%;\n    left: 0;\n    transform: translateY(-50%);\n  }\n</style>\n\n"]}]}