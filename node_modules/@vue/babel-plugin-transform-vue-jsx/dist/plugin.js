"use strict";function _interopDefault(a){return a&&"object"==typeof a&&"default"in a?a["default"]:a}var syntaxJsx=_interopDefault(require("@babel/plugin-syntax-jsx")),helperModuleImports=require("@babel/helper-module-imports"),kebabcase=_interopDefault(require("lodash.kebabcase")),htmlTags=_interopDefault(require("html-tags")),svgTags=_interopDefault(require("svg-tags"));const xlinkRE=/^xlink([A-Z])/,rootAttributes=["staticClass","class","style","key","ref","refInFor","slot","scopedSlots","model"],prefixes=["props","domProps","on","nativeOn","hook","attrs"],domPropsValueElements=["input","textarea","option","select"],domPropsElements=[...domPropsValueElements,"video"],mustUseDomProps=(a,b,c)=>"value"===c&&domPropsValueElements.includes(a)&&"button"!==b||"selected"===c&&"option"===a||"checked"===c&&"input"===a||"muted"===c&&"video"===a,isDirective=a=>a.startsWith(`v-`)||a.startsWith("v")&&2<=a.length&&"A"<=a[1]&&"Z">=a[1],getTag=(a,b)=>{const c=b.get("name");if(a.isJSXIdentifier(c)){const d=c.get("name").node;return!b.scope.hasBinding(d)||htmlTags.includes(d)||svgTags.includes(d)?a.stringLiteral(d):a.identifier(d)}if(a.isJSXMemberExpression(c))return transformJSXMemberExpression(a,c);throw new Error(`getTag: ${c.type} is not supported`)},getChildren=(a,b)=>b.map((c,d)=>{if(c.isJSXText())return transformJSXText(a,c,0===d?-1:d===b.length-1?1:0);if(c.isJSXExpressionContainer())return transformJSXExpressionContainer(a,c);if(c.isJSXSpreadChild())return transformJSXSpreadChild(a,c);if(c.isJSXElement())return transformJSXElement(a,c);throw new Error(`getChildren: ${c.type} is not supported`)}).filter(a=>null!==a),addAttribute=(a,b,c,d)=>{if(b[c]){let e=!1;a.isObjectProperty(d)&&("on"===c||"nativeOn"===c)&&b[c].properties.forEach(b=>{a.isObjectProperty(b)&&b.key.value===d.key.value&&(a.isArrayExpression(b.value)?b.value.elements.push(d.value):b.value=a.arrayExpression([b.value,d.value]),e=!0)}),e||b[c].properties.push(d)}else b[c]=a.objectExpression([d])},parseMagicDomPropsInfo=(a,b,c)=>{const d=a.isStringLiteral(c)&&c.value,e=domPropsElements.includes(d);let f="";if(e){const c=b.find(b=>a.isJSXAttribute(b)&&a.isJSXIdentifier(b.get("name"))&&a.isStringLiteral(b.get("value"))&&"type"===b.get("name.name").node);f=c&&c.get("value.value").node}return{tagName:d,canContainDomProps:e,elementType:f}},parseAttributeJSXAttribute=(a,b,c,d,e)=>{const f=b.get("name");let g,h,i,j;h=a.isJSXNamespacedName(f)?`${f.get("namespace.name").node}:${f.get("name.name").node}`:f.get("name").node,[h,...i]=h.split("_"),[h,j]=h.split(":"),g=prefixes.find(a=>h.startsWith(a))||"attrs",h=h.replace(new RegExp(`^${g}\-?`),""),h=h[0].toLowerCase()+h.substr(1);const k=b.get("value");let l;if(!k.node)l=a.booleanLiteral(!0);else if(a.isStringLiteral(k))l=k.node;else if(a.isJSXExpressionContainer(k))mustUseDomProps(d,e,h)&&(g="domProps"),l=k.get("expression").node;else throw new Error(`getAttributes (attribute value): ${k.type} is not supported`);l._argument=j,l._modifiers=i,rootAttributes.includes(h)?c[h]=l:(isDirective(h)&&(h=kebabcase(h.substr(1)),g="directives"),h.match(xlinkRE)&&(h=h.replace(xlinkRE,(a,b)=>"xlink:"+b.toLowerCase())),addAttribute(a,c,g,a.objectProperty(a.stringLiteral(h),l)))},parseAttributeJSXSpreadAttribute=(a,b,c,d)=>{const e=b.get("argument");return a.isObjectExpression(e)&&!e.get("properties").find(b=>!a.isObjectProperty(b)||!prefixes.includes(b.get("key.name").node))?e.get("properties").forEach(b=>{addAttribute(a,c,b.get("key.name").node,a.spreadElement(b.get("value").node))}):(d.push(c),d.push({type:"vueSpread",argument:e.node}),c={}),c},getAttributes=(a,b,c)=>{const d=[];let e={};const{tagName:f,canContainDomProps:g,elementType:h}=parseMagicDomPropsInfo(a,b,c);return b.forEach(b=>{if(a.isJSXAttribute(b))return void parseAttributeJSXAttribute(a,b,e,f,h);if(a.isJSXSpreadAttribute(b))return void(e=parseAttributeJSXSpreadAttribute(a,b,e,d));throw new Error(`getAttributes (attribute): ${b.type} is not supported`)}),0<d.length?(0<Object.keys(e).length&&d.push(e),a.arrayExpression(d.map(b=>"vueSpread"===b.type?b.argument:transformAttributes(a,b)))):Object.entries(e).length&&transformAttributes(a,e)},transformDirectives=(a,b)=>a.arrayExpression(b.properties.map(b=>a.objectExpression([a.objectProperty(a.identifier("name"),b.key),a.objectProperty(a.identifier("value"),b.value),...(b.value._argument?[a.objectProperty(a.identifier("arg"),a.stringLiteral(b.value._argument))]:[]),...(b.value._modifiers&&0<b.value._modifiers.length?[a.objectProperty(a.identifier("modifiers"),a.objectExpression(b.value._modifiers.map(b=>a.objectProperty(a.stringLiteral(b),a.booleanLiteral(!0)))))]:[])]))),transformAttributes=(a,b)=>a.objectExpression(Object.entries(b).map(([b,c])=>"directives"===b?a.objectProperty(a.stringLiteral(b),transformDirectives(a,c)):a.objectProperty(a.stringLiteral(b),c))),transformJSXElement=(a,b)=>{const c=getTag(a,b.get("openingElement")),d=getChildren(a,b.get("children")),e=getAttributes(a,b.get("openingElement.attributes"),c),f=[c];if(e)if(a.isArrayExpression(e)){const c=helperModuleImports.addDefault(b,"@vue/babel-helper-vue-jsx-merge-props",{nameHint:"_mergeJSXProps"});f.push(a.callExpression(c,[e]))}else f.push(e);return d.length&&f.push(a.arrayExpression(d)),a.callExpression(a.identifier("h"),f)},transformJSXMemberExpression=(a,b)=>{const c=b.get("object"),d=b.get("property"),e=c.isJSXMemberExpression()?transformJSXMemberExpression(a,c):a.identifier(c.get("name").node),f=a.identifier(d.get("name").node);return a.memberExpression(e,f)},trimText=(a,b)=>0===b?a:a.replace(-1===b?/^\s*/:/\s*$/,""),transformJSXText=(a,b,c)=>{const d=trimText(b.get("value").node,c);return d?a.stringLiteral(d):null},transformJSXExpressionContainer=(a,b)=>b.get("expression").node,transformJSXSpreadChild=(a,b)=>a.spreadElement(b.get("expression").node);var index=a=>{const b=a.types;return{name:"babel-plugin-transform-vue-jsx",inherits:syntaxJsx,visitor:{JSXElement(a){a.replaceWith(transformJSXElement(b,a))}}}};module.exports=index;
